AWSTemplateFormatVersion: "2010-09-09"
Description: Creates resources required for authentication, e.g. cognito user pools and federation configuration.

Parameters:
  UserPoolName:
    Type: String
    Description: The name for the user pool
    Default: Ewelists
  DomainName:
    Description: Domain name for your website (example.com)
    Type: String
    AllowedPattern: "^[a-z0-9-]*.com$"
    ConstraintDescription: Must be a web domain, ending in .com. Can include lower case letters, numbers and hypens.
    Default: ewelists.com
  FromEmail:
    Type: String
    Description: Email address used to send signup emails.
    Default: contact@ewelists.com
  SignUpFunction:
    Type: String
    Description: Sign up function name
    Default: ''
  FacebookClientIdVersion:
    Type: String
    Default: 1
  FacebookClientSecretVersion:
    Type: String
    Default: 1
  GoogleClientIdVersion:
    Type: String
    Default: 1
  GoogleClientSecretVersion:
    Type: String
    Default: 1
  AmazonClientIdVersion:
    Type: String
    Default: 1
  AmazonClientSecretVersion:
    Type: String
    Default: 1
  Environment:
    Description: Environment type.
    Default: prod
    Type: String
    AllowedValues:
      - prod
      - staging
      - dev
      - test

Conditions:
  Prod: !Equals [ !Ref Environment, prod ]
  Staging: !Equals [ !Ref Environment, staging ]
  HasSignupFunction: !Not [!Equals [ !Ref SignUpFunction, "" ]]

Resources:
  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      AllowedOAuthFlows:
        - code
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes:
        - email
        - openid
        - aws.cognito.signin.user.admin
        - profile
      CallbackURLs:
        - !If
            - Prod
            - 'https://ewelists.com'
            - !If
              - Staging
              - !Sub 'https://${Environment}.ewelists.com'
              - http://localhost:3000
      ClientName: Ewelists
      LogoutURLs:
        - !If
            - Prod
            - 'https://ewelists.com/login'
            - !If
              - Staging
              - !Sub 'https://${Environment}.ewelists.com/login'
              - http://localhost:3000/login
      RefreshTokenValidity: 30
      SupportedIdentityProviders:
        - COGNITO
        - Facebook
        - Google
        - LoginWithAmazon
      UserPoolId: !Ref UserPool

  UserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain: !If [Prod, 'ewelists', !Sub '${Environment}-ewelists']
      UserPoolId: !Ref UserPool

  FacebookIdentityProvider:
    Type: AWS::Cognito::UserPoolIdentityProvider
    Properties:
      AttributeMapping:
          email: email
          name: name
          username: id
      ProviderDetails:
          api_version: v6.0
          attributes_url: https://graph.facebook.com/v6.0/me?fields=
          attributes_url_add_attributes: true
          authorize_scopes: "public_profile, email"
          authorize_url: https://www.facebook.com/v6.0/dialog/oauth
          client_id: !Sub '{{resolve:ssm:/${DomainName}/${Environment}/Facebook/ClientId:${FacebookClientIdVersion}}}'
          client_secret: !Sub '{{resolve:ssm:/${DomainName}/${Environment}/Facebook/ClientSecret:${FacebookClientSecretVersion}}}'
          token_request_method: GET
          token_url: https://graph.facebook.com/v6.0/oauth/access_token
      ProviderName: Facebook
      ProviderType: Facebook
      UserPoolId: !Ref UserPool

  GoogleIdentityProvider:
    Type: AWS::Cognito::UserPoolIdentityProvider
    Properties:
      AttributeMapping:
          email: email
          name: name
          username: sub
      ProviderDetails:
          attributes_url: https://people.googleapis.com/v1/people/me?personFields=
          attributes_url_add_attributes: true
          authorize_scopes: "profile email openid"
          authorize_url: https://accounts.google.com/o/oauth2/v2/auth
          client_id: !Sub '{{resolve:ssm:/${DomainName}/${Environment}/Google/ClientId:${GoogleClientIdVersion}}}'
          client_secret: !Sub '{{resolve:ssm:/${DomainName}/${Environment}/Google/ClientSecret:${GoogleClientSecretVersion}}}'
          oidc_issuer: https://accounts.google.com
          token_request_method: POST
          token_url: https://www.googleapis.com/oauth2/v4/token
      ProviderName: Google
      ProviderType: Google
      UserPoolId: !Ref UserPool

  AmazonIdentityProvider:
    Type: AWS::Cognito::UserPoolIdentityProvider
    Properties:
      AttributeMapping:
          email: email
          name: name
          username: user_id
      ProviderDetails:
          attributes_url: https://api.amazon.com/user/profile
          attributes_url_add_attributes: false
          authorize_scopes: profile
          authorize_url: https://www.amazon.com/ap/oa
          client_id: !Sub '{{resolve:ssm:/${DomainName}/${Environment}/Amazon/ClientId:${AmazonClientIdVersion}}}'
          client_secret: !Sub '{{resolve:ssm:/${DomainName}/${Environment}/Amazon/ClientSecret:${AmazonClientSecretVersion}}}'
          token_request_method: POST
          token_url: https://api.amazon.com/auth/o2/token
      ProviderName: LoginWithAmazon
      ProviderType: LoginWithAmazon
      UserPoolId: !Ref UserPool

  IdentityPool:
    Type: AWS::Cognito::IdentityPool
    Properties:
      AllowUnauthenticatedIdentities: false
      CognitoIdentityProviders:
        - ClientId: !Ref UserPoolClient
          ProviderName: !Sub 'cognito-idp.${AWS::Region}.amazonaws.com/${UserPool}'
          ServerSideTokenCheck: false
      IdentityPoolName: !If [Prod, !Ref UserPoolName, !Sub '${UserPoolName} ${Environment}']

  IdentityPoolRoleAttachment:
    Type: AWS::Cognito::IdentityPoolRoleAttachment
    Properties:
      IdentityPoolId: !Ref IdentityPool
      Roles:
        unauthenticated: !GetAtt UnAuthRole.Arn
        authenticated: !GetAtt AuthRole.Arn

  AuthRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${UserPoolName}-${Environment}-CognitoAuthRole'
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Federated:
            - cognito-identity.amazonaws.com
          Action:
          - sts:AssumeRoleWithWebIdentity
          Condition:
            StringEquals:
              cognito-identity.amazonaws.com:aud: !Ref IdentityPool
            ForAnyValue:StringLike:
              cognito-identity.amazonaws.com:amr: "authenticated"
      Path: "/"
      Policies:
      - PolicyName: CognitoAuthRolePolicy
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
              - mobileanalytics:PutEvents
              - cognito-sync:*
              - cognito-identity:*
            Resource: "*"
          - Effect: Allow
            Action:
              - execute-api:Invoke
            Resource: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:*/*/*/*'
          Version: '2012-10-17'

  UnAuthRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${UserPoolName}-${Environment}-CognitoUnAuthRole'
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Federated:
            - cognito-identity.amazonaws.com
          Action:
          - sts:AssumeRoleWithWebIdentity
          Condition:
            StringEquals:
              cognito-identity.amazonaws.com:aud: !Ref IdentityPool
            ForAnyValue:StringLike:
              cognito-identity.amazonaws.com:amr: "unauthenticated"
      Path: "/"
      Policies:
      - PolicyName: CognitoAuthRolePolicy
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
              - mobileanalytics:PutEvents
              - cognito-sync:*
            Resource: "*"
          Version: '2012-10-17'

  UserPool:
    Type: AWS::Cognito::UserPool
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      UserPoolName: !If [Prod, !Ref UserPoolName, !Sub '${UserPoolName}-${Environment}']
      UsernameAttributes:
        - email
      AutoVerifiedAttributes:
        - email
      LambdaConfig:
        PreSignUp:
          !If
            - HasSignupFunction
            - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${SignUpFunction}-${Environment}"
            - !Ref "AWS::NoValue"
      EmailVerificationMessage: "Thank you for signing up with Ewelists.<p></p>\n\nYour verification code is {####}."
      EmailVerificationSubject: "Verify your Ewelists account"
      EmailConfiguration:
          SourceArn: !Sub "arn:aws:ses:${AWS::Region}:${AWS::AccountId}:identity/${FromEmail}"
          ReplyToEmailAddress: !Ref FromEmail
          From: !Sub "Ewelists <${FromEmail}>"
          EmailSendingAccount: "DEVELOPER"
      VerificationMessageTemplate:
          SmsMessage: "Your verification code is {####}. "
          EmailSubject:
            !If
              - Prod
              - "Verify your Ewelists account"
              - !Sub "Verify your Ewelists account (${Environment})"
          DefaultEmailOption: "CONFIRM_WITH_CODE"
          EmailMessage: |
            <!doctype html>
            <html>
              <head>
                <meta name="viewport" content="width=device-width">
                <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
                <title>Simple Transactional Email</title>
                <link href='https://fonts.googleapis.com/css?family=Roboto Slab' rel='stylesheet'>
                <link href="https://fonts.googleapis.com/css?family=Roboto:300,400&display=swap" rel="stylesheet">
                <style>
                /* -------------------------------------
                    INLINED WITH htmlemail.io/inline
                ------------------------------------- */
                /* -------------------------------------
                    RESPONSIVE AND MOBILE FRIENDLY STYLES
                ------------------------------------- */
                @media only screen and (max-width: 620px) {
                  table[class=body] h1 {
                    font-size: 28px !important;
                    margin-bottom: 10px !important;
                  }
                  table[class=body] p,
                        table[class=body] ul,
                        table[class=body] ol,
                        table[class=body] td,
                        table[class=body] span,
                        table[class=body] a {
                    font-size: 16px !important;
                  }
                  table[class=body] .wrapper,
                        table[class=body] .article {
                    padding: 10px !important;
                  }
                  table[class=body] .content {
                    padding: 0 !important;
                  }
                  table[class=body] .container {
                    padding: 0 !important;
                    width: 100% !important;
                  }
                  table[class=body] .main {
                    border-left-width: 0 !important;
                    border-radius: 0 !important;
                    border-right-width: 0 !important;
                  }
                  table[class=body] .btn table {
                    width: 100% !important;
                  }
                  table[class=body] .btn a {
                    width: 100% !important;
                  }
                  table[class=body] .img-responsive {
                    height: auto !important;
                    max-width: 100% !important;
                    width: auto !important;
                  }
                }

                /* -------------------------------------
                    PRESERVE THESE STYLES IN THE HEAD
                ------------------------------------- */
                @media all {
                  .ExternalClass {
                    width: 100%;
                  }
                  .ExternalClass,
                        .ExternalClass p,
                        .ExternalClass span,
                        .ExternalClass font,
                        .ExternalClass td,
                        .ExternalClass div {
                    line-height: 100%;
                  }
                  .apple-link a {
                    color: inherit !important;
                    font-family: inherit !important;
                    font-size: inherit !important;
                    font-weight: inherit !important;
                    line-height: inherit !important;
                    text-decoration: none !important;
                  }
                  #MessageViewBody a {
                    color: inherit;
                    text-decoration: none;
                    font-size: inherit;
                    font-family: inherit;
                    font-weight: inherit;
                    line-height: inherit;
                  }
                  .btn-primary table td:hover {
                    background-color: #34495e !important;
                  }
                  .btn-primary a:hover {
                    background-color: #34495e !important;
                    border-color: #34495e !important;
                  }
                }
                </style>
              </head>
              <body class="" style="background-color: #f6f6f6; font-family: sans-serif; -webkit-font-smoothing: antialiased; font-size: 14px; line-height: 1.4; margin: 0; padding: 0; -ms-text-size-adjust: 100%; -webkit-text-size-adjust: 100%;">
                <table border="0" cellpadding="0" cellspacing="0" class="body" style="border-collapse: separate; mso-table-lspace: 0pt; mso-table-rspace: 0pt; width: 100%; background-color: #f6f6f6;">
                  <tr>
                    <td style="font-family: sans-serif; font-size: 14px; vertical-align: top;">&nbsp;</td>
                    <td class="container" style="font-family: sans-serif; font-size: 14px; vertical-align: top; display: block; Margin: 0 auto; max-width: 580px; padding: 10px; width: 580px;">
                      <div class="content" style="box-sizing: border-box; display: block; Margin: 0 auto; max-width: 580px; padding: 10px;">

                        <!-- START CENTERED WHITE CONTAINER -->
                        <table class="main" style="border-collapse: separate; mso-table-lspace: 0pt; mso-table-rspace: 0pt; width: 100%; background: #ffffff; border-radius: 3px;">

                          <!-- START LOGO HEADER -->
                          <tr>
                            <td align="center" style="font-family: sans-serif; font-size: 14px; vertical-align: top; background: #577590; padding: 15px 20px;">
                              <a href="https://ewelists.com" target="_blank">
                                <img class="logo_top" style="display:block; border:none;" src="https://ewelists.com/images/logo-vertical-white.png" width="80" alt="Ewelists">
                              </a>
                            </td>
                          </tr>

                          <!-- START MAIN CONTENT AREA -->
                          <tr>
                            <td class="wrapper" style="font-family: sans-serif; font-size: 14px; vertical-align: top; box-sizing: border-box; padding: 20px;">
                              <table border="0" cellpadding="0" cellspacing="0" style="border-collapse: separate; mso-table-lspace: 0pt; mso-table-rspace: 0pt; width: 100%;">
                                <tr>
                                  <td style="font-family: Roboto Slab; font-size: 16px; vertical-align: top;">
                                    <p style="font-family: Roboto; font-size: 16px; font-weight: 300; color: #999; margin: 0; margin-top: 30px; Margin-bottom: 15px;">Your One Time Password (OTP) is below.  Please use this to verify your email address.</p>
                                    <p style="font-family: Roboto Slab; font-size: 22px; font-weight: 700; color: #3C4858 ; margin: 40px 0;"> {####} </p>
                                    <p style="font-family: Roboto; font-size: 16px; font-weight: 300; color: #999; margin: 0; Margin-bottom: 75px;">Do not share this OTP with anyone.</p>
                                  </td>
                                </tr>
                              </table>
                            </td>
                          </tr>

                        <!-- END MAIN CONTENT AREA -->
                        </table>

                        <!-- START FOOTER -->
                        <div class="footer" style="clear: both; Margin-top: 10px; text-align: center; width: 100%;">
                          <table border="0" cellpadding="0" cellspacing="0" style="border-collapse: separate; mso-table-lspace: 0pt; mso-table-rspace: 0pt; width: 100%;">
                            <tr>
                              <td class="content-block" style="font-family: sans-serif; vertical-align: top; padding-bottom: 10px; padding-top: 10px; font-size: 12px; color: #999999; text-align: center;">
                                <span class="apple-link" style="color: #999999; font-size: 12px; text-align: center;"> Lytchett House 13 Freeland Park, Wareham Road, Poole, Dorset, United Kingdom, BH16 6FA.</span>
                              </td>
                            </tr>
                            <tr>
                              <td class="content-block powered-by" style="font-family: sans-serif; vertical-align: top; padding-bottom: 10px; padding-top: 10px; font-size: 12px; color: #999999; text-align: center;">
                                Sent to you by <a href="http://ewelists.com" style="color: #999999; font-size: 12px; text-align: center; text-decoration: none;">https://ewelists.com</a>.
                              </td>
                            </tr>
                          </table>
                        </div>
                        <!-- END FOOTER -->

                      <!-- END CENTERED WHITE CONTAINER -->
                      </div>
                    </td>
                    <td style="font-family: sans-serif; font-size: 14px; vertical-align: top;">&nbsp;</td>
                  </tr>
                </table>
              </body>
            </html>



Outputs:
  userPoolId:
    Description: Cognito user pool id.
    Value: !Ref UserPool
    Export:
      Name: !Sub 'Auth-${Environment}-UserPoolId'


  userPoolClientId:
    Value: !Ref UserPoolClient

  identityPoolId:
    Value: !Ref IdentityPool
