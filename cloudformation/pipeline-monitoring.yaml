AWSTemplateFormatVersion: 2010-09-09
Description: Pipeline for deployment of monitoring stack.
Parameters:
  PipelineName:
    Type: String
    Description: Name of application used to describe resources.
    Default: monitoring
  PipelineCrossAccountRoleName:
    Type: String
    Description: Name of the pipeline cross account role.
    Default: pipeline-monitoring-CrossAccount-Role
  PipelineCrossAccountCFRoleName:
    Type: String
    Description: Name of the pipeline cross account role.
    Default: pipeline-monitoring-CrossAccount-CF-Role
  MonitoringSourceFile:
    Default: monitoring-health.zip
    Description: The path of the monitoring stack template
    Type: String
  MonitoringTemplate:
    Default: monitoring-health.yaml
    Description: The path of the monitoring stack template
    Type: String

Resources:
  PipelineSourceBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'pipeline-ewelists-${PipelineName}-${AWS::Region}-source'
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      VersioningConfiguration:
        Status: Enabled

  PipelineSourceTrailBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'pipeline-ewelists-${PipelineName}-${AWS::Region}-trail'
      AccessControl: Private

  PipelineSourceTrailBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref PipelineSourceTrailBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Sid: AWSCloudTrailAclCheck
            Effect: Allow
            Principal:
              Service:
                - cloudtrail.amazonaws.com
            Action: s3:GetBucketAcl
            Resource: !GetAtt PipelineSourceTrailBucket.Arn
          -
            Sid: AWSCloudTrailWrite
            Effect: Allow
            Principal:
              Service:
                - cloudtrail.amazonaws.com
            Action: s3:PutObject
            Resource: !Join [ '', [ !GetAtt PipelineSourceTrailBucket.Arn, '/AWSLogs/', !Ref 'AWS::AccountId', '/*' ] ]
            Condition:
              StringEquals:
                s3:x-amz-acl: bucket-owner-full-control

  PipelineArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'pipeline-ewelists-${PipelineName}-${AWS::Region}-artifacts'
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      LifecycleConfiguration:
        Rules:
          - Id: Build logs expiration
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 7
            ExpirationInDays: 180
            Prefix: '*'
            Status: Enabled

  PipelineArtifactBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref PipelineArtifactBucket
      PolicyDocument:
        Statement:
          - Action:
              - 's3:Get*'
              - 's3:Put*'
            Effect: Allow
            Resource: !Sub "arn:aws:s3:::${PipelineArtifactBucket}/*"
            Principal:
              AWS:
                - "arn:aws:iam::{{resolve:ssm:/accounts/prod:1}}:root"
          - Action:
              - 's3:ListBucket'
            Effect: Allow
            Resource: !Sub "arn:aws:s3:::${PipelineArtifactBucket}"
            Principal:
              AWS:
                - "arn:aws:iam::{{resolve:ssm:/accounts/prod:1}}:root"

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Ref PipelineName
      RoleArn: !GetAtt PipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactBucket
        EncryptionKey:
          Id: !GetAtt pipelineKey.Arn
          Type: "KMS"
      Stages:
        - Name: Source
          Actions:
            - Name: MonitoringBucket
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: '1'
                Provider: S3
              OutputArtifacts:
              - Name: S-Main
              Configuration:
                S3Bucket: !Ref PipelineSourceBucket
                S3ObjectKey: !Ref MonitoringSourceFile
                PollForSourceChanges: false
              RunOrder: 1
        - Name: Staging
          Actions:
            - Name: Deploy-Monitoring
              InputArtifacts:
                - Name: S-Main
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: '1'
                Provider: CloudFormation
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !GetAtt [MonitoringCFNRole, Arn]
                StackName: Monitoring-Health-Staging
                TemplatePath: !Sub "S-Main::${MonitoringTemplate}"
                ParameterOverrides: |
                  {
                    "CloudFrontId": "{{resolve:ssm:/ewelists.com/prod/CloudFrontID:1}}",
                    "Environment": "staging"
                  }
              RunOrder: 1
        - Name: Prod
          Actions:
            - Name: Deploy-Monitoring
              InputArtifacts:
                - Name: S-Main
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: '1'
                Provider: CloudFormation
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !Sub "arn:aws:iam::{{resolve:ssm:/accounts/prod:1}}:role/${PipelineCrossAccountCFRoleName}"
                StackName: Monitoring-Health-Prod
                TemplatePath: !Sub "S-Main::${MonitoringTemplate}"
                ParameterOverrides: |
                  {
                    "CloudFrontId": "{{resolve:ssm:/ewelists.com/prod/CloudFrontID:1}}",
                    "Environment": "prod"
                  }
              RoleArn: !Sub "arn:aws:iam::{{resolve:ssm:/accounts/prod:1}}:role/${PipelineCrossAccountRoleName}"
              RunOrder: 1

  AmazonCloudWatchEventRule:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
          - aws.s3
        detail-type:
          - AWS API Call via CloudTrail
        detail:
          eventSource:
            - s3.amazonaws.com
          eventName:
            - PutObject
            - CompleteMultipartUpload
          resources:
            ARN:
              - !Join
                - ''
                - - !GetAtt PipelineSourceBucket.Arn
                  - "/"
                  - !Ref MonitoringSourceFile
      Targets:
        - Arn: !Sub 'arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${Pipeline}'
          RoleArn: !GetAtt AmazonCloudWatchEventRole.Arn
          Id: codepipeline-AppPipeline

  AwsCloudTrail:
    DependsOn:
      - PipelineSourceTrailBucketPolicy
    Type: AWS::CloudTrail::Trail
    Properties:
      S3BucketName: !Ref PipelineSourceTrailBucket
      EventSelectors:
        -
          DataResources:
            -
              Type: AWS::S3::Object
              Values:
                - !Join
                  - ''
                  - - !GetAtt PipelineSourceBucket.Arn
                    - "/"
                    - !Ref MonitoringSourceFile
          ReadWriteType: WriteOnly
      IncludeGlobalServiceEvents: true
      IsLogging: true
      IsMultiRegionTrail: true

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'pipeline-${PipelineName}-ServiceRole'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: PipelineServiceRolePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - iam:PassRole
                  - cloudformation:CreateStack
                  - cloudformation:DescribeStacks
                  - cloudformation:DeleteStack
                  - cloudformation:UpdateStack
                  - cloudformation:CreateChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DescribeChangeSet
                  - cloudformation:SetStackPolicy
                Resource: "*"
        - PolicyName: SourceBucketPermissions
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - s3:Get*
                  - s3:Put*
                  - s3:List*
                Effect: Allow
                Resource:
                  - !Sub "arn:aws:s3:::${PipelineSourceBucket}"
                  - !Sub "arn:aws:s3:::${PipelineSourceBucket}/*"
                  - !Sub "arn:aws:s3:::${PipelineArtifactBucket}"
                  - !Sub "arn:aws:s3:::${PipelineArtifactBucket}/*"
        - PolicyName: PipelineCrossAccountPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource:
                  - "arn:aws:iam::{{resolve:ssm:/accounts/prod:1}}:role/*"

  MonitoringCFNRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'pipeline-${PipelineName}-HealthCFN-Role'
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [cloudformation.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: ManageCloudFormation
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - cloudformation:CreateStack
                  - cloudformation:DescribeStacks
                  - cloudformation:DeleteStack
                  - cloudformation:UpdateStack
                  - cloudformation:CreateChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DescribeChangeSet
                Effect: Allow
                Resource: '*'
        - PolicyName: ManageRoute53
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - route53:*
                Effect: Allow
                Resource:
                  - "*"
        - PolicyName: ManageSNS
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - sns:*
                Effect: Allow
                Resource:
                  - "*"
        - PolicyName: ManageCloudwatchAlarms
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - cloudwatch:*
                Effect: Allow
                Resource:
                  - "*"

  AmazonCloudWatchEventRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - events.amazonaws.com
          Action: sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: cwe-pipeline-execution
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: codepipeline:StartPipelineExecution
            Resource:
              - !Sub 'arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${Pipeline}'

  pipelineKey:
    Type: AWS::KMS::Key
    Properties:
      Description: Symmetric CMK for Main pipeline to have cross-account permissions
      KeyPolicy:
        Version: '2012-10-17'
        Id: key-default-1
        Statement:
        - Sid: Enable IAM User Permissions
          Effect: Allow
          Principal:
            AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
          Action: kms:*
          Resource: '*'
        - Sid: Allow administration of the key
          Effect: Allow
          Principal:
            AWS: !Sub "arn:aws:iam::${AWS::AccountId}:role/AdminAccessRole"
          Action:
          - kms:Create*
          - kms:Describe*
          - kms:Enable*
          - kms:List*
          - kms:Put*
          - kms:Update*
          - kms:Revoke*
          - kms:Disable*
          - kms:Get*
          - kms:Delete*
          - kms:ScheduleKeyDeletion
          - kms:CancelKeyDeletion
          Resource: '*'
        - Sid: Allow use of the key
          Effect: Allow
          Principal:
            AWS:
              - !GetAtt PipelineRole.Arn
              - !Sub "arn:aws:iam::{{resolve:ssm:/accounts/prod:1}}:role/${PipelineCrossAccountRoleName}"
          Action:
          - kms:DescribeKey
          - kms:Encrypt
          - kms:Decrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey
          - kms:GenerateDataKeyWithoutPlaintext
          Resource: '*'
