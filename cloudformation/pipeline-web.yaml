AWSTemplateFormatVersion: 2010-09-09
Description: Pipeline for deployment to s3 bucket with static website.
Parameters:
  PipelineName:
    Type: String
    Description: Name of application used to describe resources.
    Default: web
    AllowedPattern: "^[-a-z0-9]*$"
    ConstraintDescription: Application name can include numbers, lowercase letters, and hyphens (-).
  WebBucketName:
    Type: String
    Description: Name of the web s3 bucket.
    Default: ewelists.com
  GitHubUser:
    Type: String
    Description: GitHub User
    Default: Alex-Burgess
  GitHubInfraRepo:
    Type: String
    Description: GitHub Repository Name
    Default: ewelists.com
  GitHubServicesRepo:
    Type: String
    Description: GitHub Repository Name
    Default: ewelists.com-services
  GitHubContentRepo:
    Type: String
    Description: GitHub Repository Name
    Default: ewelists.com-web
  GitHubBranch:
    Type: String
    Description: GitHub Branch
    Default: "master"
  GitHubToken:
    Type: String
    NoEcho: true
    Description: Personal Access Token.
  WebTemplatePath:
    Default: cloudformation/web.yaml
    Description: The path of the Web stack template
    Type: String

Resources:
  PipelineArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${PipelineName}-pipeline-artifacts'
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      LifecycleConfiguration:
        Rules:
          - Id: Build logs expiration
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 7
            ExpirationInDays: 180
            Prefix: !Sub '${PipelineName}-pipeline-artifacts*'
            Status: Enabled

  ListsStagingBuildsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: sam-builds-lists-staging
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      LifecycleConfiguration:
        Rules:
          - Id: Builds expiration
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 7
            ExpirationInDays: 60
            Prefix: !Sub 'sam-builds-lists-staging*'
            Status: Enabled

  ListsProdBuildsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: sam-builds-lists-prod
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      LifecycleConfiguration:
        Rules:
          - Id: Builds expiration
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 7
            ExpirationInDays: 60
            Prefix: !Sub 'sam-builds-lists-prod*'
            Status: Enabled

  NotFoundStagingBuildsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: sam-builds-notfound-staging
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      LifecycleConfiguration:
        Rules:
          - Id: Builds expiration
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 7
            ExpirationInDays: 60
            Prefix: !Sub 'sam-builds-notfound-staging*'
            Status: Enabled

  NotFoundProdBuildsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: sam-builds-notfound-prod
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      LifecycleConfiguration:
        Rules:
          - Id: Builds expiration
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 7
            ExpirationInDays: 60
            Prefix: !Sub 'sam-builds-notfound-prod*'
            Status: Enabled

  ProductsStagingBuildsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: sam-builds-products-staging
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      LifecycleConfiguration:
        Rules:
          - Id: Builds expiration
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 7
            ExpirationInDays: 60
            Prefix: !Sub 'sam-builds-products-staging*'
            Status: Enabled

  ProductsProdBuildsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: sam-builds-products-prod
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      LifecycleConfiguration:
        Rules:
          - Id: Builds expiration
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 7
            ExpirationInDays: 60
            Prefix: !Sub 'sam-builds-products-prod*'
            Status: Enabled

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${PipelineName}-pipeline-ServiceRole'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: PipelineServiceRolePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - cloudformation:CreateStack
                  - cloudformation:DescribeStacks
                  - cloudformation:DeleteStack
                  - cloudformation:UpdateStack
                  - cloudformation:CreateChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DescribeChangeSet
                  - cloudformation:SetStackPolicy
                  - iam:PassRole
                  - sns:Publish
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Resource: "*"

  WebStackCFNRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${PipelineName}-pipeline-CloudFormationRole'
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [cloudformation.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: ManageCloudFormation
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - cloudformation:CreateStack
                  - cloudformation:DescribeStacks
                  - cloudformation:DeleteStack
                  - cloudformation:UpdateStack
                  - cloudformation:CreateChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DescribeChangeSet
                Effect: Allow
                Resource: '*'
        - PolicyName: SSLCertificateIdParameterStore
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - ssm:GetParameters
                Effect: Allow
                Resource:
                  - !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/ewelists.com/staging/SSLCertificateId'
                  - !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/ewelists.com/prod/SSLCertificateId'
                  - !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/CognitoUserPoolId/staging'
                  - !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/CognitoUserPoolId/prod'
        - PolicyName: ManageStagingS3
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - s3:GetObject
                  - s3:CreateBucket
                  - s3:DeleteBucket
                  - s3:PutBucketPublicAccessBlock
                  - s3:PutLifecycleConfiguration
                  - s3:PutBucketAcl
                  - s3:GetBucketAcl
                  - s3:PutBucketLogging
                  - s3:PutMetricsConfiguration
                  - s3:PutBucketWebsite
                  - s3:PutBucketPolicy
                  - s3:GetBucketPolicy
                Effect: Allow
                Resource:
                  - "arn:aws:s3:::staging.ewelists.com"
                  - "arn:aws:s3:::staging.ewelists.com/*"
                  - "arn:aws:s3:::staging.ewelists.co.uk"
                  - "arn:aws:s3:::staging.ewelists.co.uk/*"
                  - "arn:aws:s3:::www.staging.ewelists.com"
                  - "arn:aws:s3:::www.staging.ewelists.com/*"
                  - "arn:aws:s3:::www.staging.ewelists.co.uk"
                  - "arn:aws:s3:::www.staging.ewelists.co.uk/*"
                  - "arn:aws:s3:::staging.ewelists.com-logging"
                  - "arn:aws:s3:::staging.ewelists.com-logging/*"
        - PolicyName: ManageProdS3
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - s3:GetObject
                  - s3:CreateBucket
                  - s3:DeleteBucket
                  - s3:PutBucketPublicAccessBlock
                  - s3:PutLifecycleConfiguration
                  - s3:PutBucketAcl
                  - s3:GetBucketAcl
                  - s3:PutBucketLogging
                  - s3:PutMetricsConfiguration
                  - s3:PutBucketWebsite
                  - s3:PutBucketPolicy
                  - s3:GetBucketPolicy
                Effect: Allow
                Resource:
                  - "arn:aws:s3:::ewelists.com"
                  - "arn:aws:s3:::ewelists.com/*"
                  - "arn:aws:s3:::ewelists.co.uk"
                  - "arn:aws:s3:::ewelists.co.uk/*"
                  - "arn:aws:s3:::www.ewelists.com"
                  - "arn:aws:s3:::www.ewelists.com/*"
                  - "arn:aws:s3:::www.ewelists.co.uk"
                  - "arn:aws:s3:::www.ewelists.co.uk/*"
                  - "arn:aws:s3:::ewelists.com-logging"
                  - "arn:aws:s3:::ewelists.com-logging/*"
        - PolicyName: ManagePiplineAndBuildArtifactBuckets
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - s3:GetObject
                  - s3:CreateBucket
                  - s3:DeleteBucket
                  - s3:PutBucketPublicAccessBlock
                Effect: Allow
                Resource:
                  - "arn:aws:s3:::web-pipeline-artifacts/*"
                  - "arn:aws:s3:::sam-builds-lists-staging/*"
                  - "arn:aws:s3:::sam-builds-lists-prod/*"
                  - "arn:aws:s3:::sam-builds-notfound-staging/*"
                  - "arn:aws:s3:::sam-builds-notfound-prod/*"
                  - "arn:aws:s3:::sam-builds-products-staging/*"
                  - "arn:aws:s3:::sam-builds-products-prod/*"
        - PolicyName: ManageRoute53
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - route53:*
                Effect: Allow
                Resource:
                  - "*"
        - PolicyName: ManageCloudFront
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - cloudfront:CreateCloudFrontOriginAccessIdentity
                  - cloudfront:CreateDistribution
                  - cloudfront:DeleteDistribution
                  - cloudfront:GetCloudFrontOriginAccessIdentity
                  - cloudfront:GetCloudFrontOriginAccessIdentityConfig
                  - cloudfront:DeleteCloudFrontOriginAccessIdentity
                  - cloudfront:TagResource
                  - cloudfront:GetDistribution
                  - cloudfront:UpdateDistribution
                Effect: Allow
                Resource:
                  - "*"
        - PolicyName: ManageDynamoDB
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - dynamodb:DescribeTable
                  - dynamodb:CreateTable
                  - dynamodb:DeleteTable
                  - dynamodb:UpdateTable
                Effect: Allow
                Resource:
                  - "arn:aws:dynamodb:*:*:table/*"
              - Action:
                  - dynamodb:ListTables
                Effect: Allow
                Resource:
                  - "*"
        - PolicyName: ManageIam
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - iam:ListRoles
                  - iam:ListPolicies
                  - iam:GetRole
                  - iam:GetPolicy
                  - iam:CreateRole
                  - iam:CreatePolicy
                  - iam:DeleteRole
                  - iam:DeletePolicy
                  - iam:UpdateRole
                  - iam:AttachRolePolicy
                  - iam:DetachRolePolicy
                  - iam:PassRole
                  - iam:PutRolePolicy
                  - iam:DeleteRolePolicy
                  - iam:getRolePolicy
                Effect: Allow
                Resource: '*'
        - PolicyName: ManageServerless
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - lambda:*
                  - apigateway:*
                Effect: Allow
                Resource: '*'

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub '${PipelineName}-pipeline'
      RoleArn: !GetAtt PipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: InfraTemplates
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: '1'
                Provider: GitHub
              OutputArtifacts:
              - Name: TemplateAF
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref GitHubInfraRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubToken
              RunOrder: 1
            - Name: Content
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: '1'
                Provider: GitHub
              OutputArtifacts:
              - Name: ContentAF
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref GitHubContentRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubToken
              RunOrder: 1
            - Name: ApiServices
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: '1'
                Provider: GitHub
              OutputArtifacts:
              - Name: ServiceAF
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref GitHubServicesRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubToken
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref SamBuildsCodeBuildProject
              InputArtifacts:
                - Name: ServiceAF
              OutputArtifacts:
                - Name: SamBuildAF
            - Name: UnitTests
              ActionTypeId:
                Category: Test
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref UnitTestsCodeBuildProject
              InputArtifacts:
                - Name: ServiceAF
        - Name: Staging
          Actions:
            - Name: DeployStack
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: TemplateAF
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !GetAtt [WebStackCFNRole, Arn]
                StackName: Web-Staging
                TemplatePath: !Sub "TemplateAF::${WebTemplatePath}"
                ParameterOverrides: '{ "Environment": "staging" }'
              RunOrder: 1
            - Name: DeployListsApi
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              InputArtifacts:
                - Name: SamBuildAF
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !GetAtt WebStackCFNRole.Arn
                StackName: Service-Lists-Staging
                TemplatePath: SamBuildAF::lists-packaged.yaml
                Capabilities: CAPABILITY_AUTO_EXPAND,CAPABILITY_NAMED_IAM
                ParameterOverrides: '{ "Environment": "staging" }'
              RunOrder: 1
            - Name: DeployNotFoundApi
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              InputArtifacts:
                - Name: SamBuildAF
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !GetAtt WebStackCFNRole.Arn
                StackName: Service-NotFound-Staging
                TemplatePath: SamBuildAF::notfound-packaged.yaml
                Capabilities: CAPABILITY_AUTO_EXPAND,CAPABILITY_NAMED_IAM
                ParameterOverrides: '{ "Environment": "staging" }'
              RunOrder: 1
            - Name: DeployProductsApi
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              InputArtifacts:
                - Name: SamBuildAF
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !GetAtt WebStackCFNRole.Arn
                StackName: Service-Products-Staging
                TemplatePath: SamBuildAF::products-packaged.yaml
                Capabilities: CAPABILITY_AUTO_EXPAND,CAPABILITY_NAMED_IAM
                ParameterOverrides: '{ "Environment": "staging" }'
              RunOrder: 1
            - Name: PostmanTests
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              InputArtifacts:
                - Name: ServiceAF
              Configuration:
                ProjectName: !Sub ${PipelineName}-Postman
                EnvironmentVariables: '[{"name":"ENVIRONMENT_ID","value":"/Postman/Environment/Staging","type":"PARAMETER_STORE"},
                {"name":"LISTS_COLLECTION_ID","value":"/Postman/Collection/Lists","type":"PARAMETER_STORE"},
                {"name":"NOTFOUND_COLLECTION_ID","value":"/Postman/Collection/NotFound","type":"PARAMETER_STORE"},
                {"name":"PRODUCTS_COLLECTION_ID","value":"/Postman/Collection/Products","type":"PARAMETER_STORE"}
                ]'
              RunOrder: 2
            - Name: ReactDeploy
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              InputArtifacts:
                - Name: ContentAF
              OutputArtifacts:
                - Name: ReactStag
              Configuration:
                ProjectName: !Ref StagingReactCodeBuildProject
              RunOrder: 3
        - Name: Production
          Actions:
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: TemplateAF
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !GetAtt [WebStackCFNRole, Arn]
                StackName: Web-Prod
                ChangeSetName: Web-Prod-ChangeSet
                TemplatePath: !Sub "TemplateAF::${WebTemplatePath}"
                ParameterOverrides: '{ "Environment": "prod" }'
              RunOrder: 1
            - Name: ApproveChangeSet
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: '1'
              RunOrder: 2
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: Web-Prod-ChangeSet
                RoleArn: !GetAtt [WebStackCFNRole, Arn]
                StackName: Web-Prod
              RunOrder: 3
            - Name: ReactDeploy
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              InputArtifacts:
                - Name: ContentAF
              OutputArtifacts:
                - Name: ReactProd
              Configuration:
                ProjectName: !Ref ProdReactCodeBuildProject
              RunOrder: 4

  SamBuildsCodeBuildProject:
    Type: AWS::CodeBuild::Project
    DependsOn: SamBuildLogsGroup
    Properties:
      Name: !Sub ${PipelineName}-Serverless-Builds
      Description: Builds SAM Serverless Applications
      ServiceRole: !GetAtt SamBuildsRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Cache:
        Type: LOCAL
        Modes:
        - LOCAL_DOCKER_LAYER_CACHE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:1.0
        EnvironmentVariables:
          - Name: LISTS_BUILD_OUTPUT_BUCKET
            Value: !Ref ListsStagingBuildsBucket
          - Name: NOTFOUND_BUILD_OUTPUT_BUCKET
            Value: !Ref NotFoundStagingBuildsBucket
          - Name: PRODUCTS_BUILD_OUTPUT_BUCKET
            Value: !Ref ProductsStagingBuildsBucket
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.yaml
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
          GroupName: !Sub ${PipelineName}-sambuildlogs
          StreamName: SamStagingBuilds
      TimeoutInMinutes: 10

  UnitTestsCodeBuildProject:
    Type: AWS::CodeBuild::Project
    DependsOn: UnitTestsLogsGroup
    Properties:
      Name: !Sub ${PipelineName}-UnitTests
      Description: Performs the unit testing of the lambda functions.
      ServiceRole: !GetAtt SamBuildsRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Cache:
        Type: LOCAL
        Modes:
        - LOCAL_DOCKER_LAYER_CACHE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:1.0
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec-unittests.yaml
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
          GroupName: !Sub ${PipelineName}-unittestlogs
          StreamName: UnitTests
      TimeoutInMinutes: 10

  PostmanCodeBuildProject:
    DependsOn: PostmanBuildLogsGroup
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: !Sub ${PipelineName}-Postman
      Description: Performs integration testing via Postman API.
      Artifacts:
        Type: CODEPIPELINE
      Cache:
        Type: LOCAL
        Modes:
        - LOCAL_DOCKER_LAYER_CACHE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: 'aws/codebuild/standard:2.0'
      ServiceRole: !GetAtt PostmanBuildsRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec-postman.yaml
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
          GroupName: !Sub ${PipelineName}-postman
          StreamName: PostmanTests

  StagingReactCodeBuildProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: !Sub ${PipelineName}-ReactBuild-Staging
      Description: Builds react web application
      Artifacts:
        Type: CODEPIPELINE
      Cache:
        Type: LOCAL
        Modes:
        - LOCAL_DOCKER_LAYER_CACHE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: 'aws/codebuild/standard:2.0'
        EnvironmentVariables:
          - Name: WEB_BUCKET
            Value: !Sub 'staging.${WebBucketName}'
          - Name: ENVIRONMENT
            Value: staging
      ServiceRole: !GetAtt ReactBuildsRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec-react.yaml
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
          GroupName: !Sub ${PipelineName}-reactbuild-staging
          StreamName: ReactBuild

  StagingReactBuildLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub ${PipelineName}-reactbuild-staging
      RetentionInDays: 30

  ProdReactCodeBuildProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: !Sub ${PipelineName}-ReactBuild-Prod
      Description: Builds react web application
      Artifacts:
        Type: CODEPIPELINE
      Cache:
        Type: LOCAL
        Modes:
        - LOCAL_DOCKER_LAYER_CACHE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: 'aws/codebuild/standard:2.0'
        EnvironmentVariables:
          - Name: WEB_BUCKET
            Value: !Ref WebBucketName
          - Name: ENVIRONMENT
            Value: prod
      ServiceRole: !GetAtt ReactBuildsRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec-react.yaml
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
          GroupName: !Sub ${PipelineName}-reactbuild-prod
          StreamName: ReactBuild

  SamBuildLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub ${PipelineName}-sambuildlogs
      RetentionInDays: 30

  UnitTestsLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub ${PipelineName}-unittestlogs
      RetentionInDays: 30

  PostmanBuildLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub ${PipelineName}-postman
      RetentionInDays: 30

  ProdReactBuildLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub ${PipelineName}-reactbuild-prod
      RetentionInDays: 30

  SamBuildsRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${PipelineName}-SamBuildsRole'
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - codebuild.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: BuildServiceRolePolicy
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource:
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${PipelineName}-sambuildlogs"
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${PipelineName}-sambuildlogs:*"
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${PipelineName}-unittestlogs"
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${PipelineName}-unittestlogs:*"
          - Effect: Allow
            Action:
              - s3:PutObject
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:GetBucketAcl
              - s3:GetBucketLocation
            Resource:
              - !Sub "arn:aws:s3:::${PipelineArtifactBucket}/*"
              - "arn:aws:s3:::sam-builds-lists-staging/*"
              - "arn:aws:s3:::sam-builds-lists-prod/*"
              - "arn:aws:s3:::sam-builds-notfound-staging/*"
              - "arn:aws:s3:::sam-builds-notfound-prod/*"
              - "arn:aws:s3:::sam-builds-products-staging/*"
              - "arn:aws:s3:::sam-builds-products-prod/*"
          Version: '2012-10-17'

  PostmanBuildsRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${PipelineName}-PostmanTestsRole'
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - codebuild.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: BuildServiceRolePolicy
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource:
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${PipelineName}-postman"
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${PipelineName}-postman:*"
          - Effect: Allow
            Action:
              - s3:DeleteObject
              - s3:PutObject
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:GetBucketVersioning
              - s3:ListBucket
            Resource:
              - !Sub "arn:aws:s3:::${PipelineArtifactBucket}/*"
          - Effect: Allow
            Action:
              - ssm:GetParameters
            Resource:
              - "*"
          Version: '2012-10-17'

  ReactBuildsRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${PipelineName}-ReactBuilds-Role'
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - codebuild.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: BuildServiceRolePolicy
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource:
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${PipelineName}-reactbuild-staging"
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${PipelineName}-reactbuild-staging:*"
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${PipelineName}-reactbuild-prod"
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${PipelineName}-reactbuild-prod:*"
          - Effect: Allow
            Action:
              - s3:DeleteObject
              - s3:PutObject
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:GetBucketVersioning
              - s3:ListBucket
            Resource:
              - !Sub "arn:aws:s3:::${PipelineArtifactBucket}/*"
              - !Sub "arn:aws:s3:::${WebBucketName}/*"
              - !Sub "arn:aws:s3:::${WebBucketName}"
              - !Sub "arn:aws:s3:::staging.${WebBucketName}/*"
              - !Sub "arn:aws:s3:::staging.${WebBucketName}"
          - Effect: Allow
            Action:
              - cloudfront:CreateInvalidation
              - cloudfront:ListDistributions
            Resource: '*'
          Version: '2012-10-17'
