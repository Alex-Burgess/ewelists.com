AWSTemplateFormatVersion: 2010-09-09
Description: Pipeline for deployment to s3 bucket with static website.
Parameters:
  PipelineName:
    Type: String
    Description: Name of application used to describe resources.
    Default: main
    AllowedPattern: "^[-a-z0-9]*$"
    ConstraintDescription: Application name can include numbers, lowercase letters, and hyphens (-).
  WebBucketName:
    Type: String
    Description: Name of the web s3 bucket.
    Default: ewelists.com
  GitHubUser:
    Type: String
    Description: GitHub User
    Default: Ewelists
  GitHubInfraRepo:
    Type: String
    Description: GitHub Repository Name
    Default: ewelists.com
  GitHubServicesRepo:
    Type: String
    Description: GitHub Repository Name
    Default: ewelists.com-services
  GitHubContentRepo:
    Type: String
    Description: GitHub Repository Name
    Default: ewelists.com-web
  GitHubBranch:
    Type: String
    Description: GitHub Branch
    Default: "master"
  GitHubToken:
    Type: String
    NoEcho: true
    Description: Personal Access Token.
  GitHubSecret:
    Type: String
    NoEcho: true
  MainTemplatePath:
    Default: cloudformation/web.yaml
    Description: The path of the Web stack template
    Type: String
  PipelineCrossAccountRoleName:
    Type: String
    Description: Name of the pipeline cross account role.
    Default: pipeline-main-CrossAccount-Role
  PipelineCrossAccountCFRoleName:
    Type: String
    Description: Name of the pipeline cross account role.
    Default: pipeline-main-CrossAccount-CF-Role
  PipelineCrossAccountDeployWebContentRoleName:
    Type: String
    Description: Name of the pipeline cross account role.
    Default: pipeline-main-CrossAccount-DeployWebContent-Role
  PipelineCrossAccountE2ERoleName:
    Type: String
    Description: Name of the pipeline cross account role.
    Default: pipeline-main-CrossAccount-E2E-Role

Resources:
  PipelineArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'pipeline-ewelists-${PipelineName}-${AWS::Region}-artifacts'
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      LifecycleConfiguration:
        Rules:
          - Id: Build logs expiration
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 7
            ExpirationInDays: 180
            Prefix: '*'
            Status: Enabled

  PipelineArtifactBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref PipelineArtifactBucket
      PolicyDocument:
        Statement:
          - Action:
              - 's3:Get*'
              - 's3:Put*'
            Effect: Allow
            Resource: !Sub "arn:aws:s3:::${PipelineArtifactBucket}/*"
            Principal:
              AWS:
                - "arn:aws:iam::{{resolve:ssm:/accounts/prod:1}}:root"
          - Action:
              - 's3:ListBucket'
            Effect: Allow
            Resource: !Sub "arn:aws:s3:::${PipelineArtifactBucket}"
            Principal:
              AWS:
                - "arn:aws:iam::{{resolve:ssm:/accounts/prod:1}}:root"

  EmailTemplatesBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: pipeline-services-email-templates
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True

  ListsBuildsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: pipeline-services-builds-lists
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      LifecycleConfiguration:
        Rules:
          - Id: Builds expiration
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 7
            ExpirationInDays: 60
            Prefix: pipeline-services-builds-lists-staging*
            Status: Enabled

  NotFoundBuildsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: pipeline-services-builds-notfound
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      LifecycleConfiguration:
        Rules:
          - Id: Builds expiration
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 7
            ExpirationInDays: 60
            Prefix: pipeline-services-builds-notfound-staging*
            Status: Enabled

  ProductsBuildsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: pipeline-services-builds-products
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      LifecycleConfiguration:
        Rules:
          - Id: Builds expiration
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 7
            ExpirationInDays: 60
            Prefix: pipeline-services-builds-products-staging*
            Status: Enabled

  ContactBuildsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: pipeline-services-builds-contact
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      LifecycleConfiguration:
        Rules:
          - Id: Builds expiration
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 7
            ExpirationInDays: 60
            Prefix: pipeline-services-builds-contact-staging*
            Status: Enabled

  EmailTemplatesBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref EmailTemplatesBucket
      PolicyDocument:
        Statement:
          - Action:
              - 's3:Get*'
            Effect: Allow
            Resource: !Sub "arn:aws:s3:::${EmailTemplatesBucket}/*"
            Principal:
              AWS:
                - !Sub "arn:aws:iam::{{resolve:ssm:/accounts/prod:1}}:role/${PipelineCrossAccountCFRoleName}"

  ListsBuildsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ListsBuildsBucket
      PolicyDocument:
        Statement:
          - Action:
              - 's3:Get*'
            Effect: Allow
            Resource: !Sub "arn:aws:s3:::${ListsBuildsBucket}/*"
            Principal:
              AWS:
                - !Sub "arn:aws:iam::{{resolve:ssm:/accounts/prod:1}}:role/${PipelineCrossAccountCFRoleName}"

  NotFoundBuildsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref NotFoundBuildsBucket
      PolicyDocument:
        Statement:
          - Action:
              - 's3:Get*'
            Effect: Allow
            Resource: !Sub "arn:aws:s3:::${NotFoundBuildsBucket}/*"
            Principal:
              AWS:
                - !Sub "arn:aws:iam::{{resolve:ssm:/accounts/prod:1}}:role/${PipelineCrossAccountCFRoleName}"

  ProductsBuildsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ProductsBuildsBucket
      PolicyDocument:
        Statement:
          - Action:
              - 's3:Get*'
            Effect: Allow
            Resource: !Sub "arn:aws:s3:::${ProductsBuildsBucket}/*"
            Principal:
              AWS:
                - !Sub "arn:aws:iam::{{resolve:ssm:/accounts/prod:1}}:role/${PipelineCrossAccountCFRoleName}"

  ContactBuildsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ContactBuildsBucket
      PolicyDocument:
        Statement:
          - Action:
              - 's3:Get*'
            Effect: Allow
            Resource: !Sub "arn:aws:s3:::${ContactBuildsBucket}/*"
            Principal:
              AWS:
                - !Sub "arn:aws:iam::{{resolve:ssm:/accounts/prod:1}}:role/${PipelineCrossAccountCFRoleName}"

  MainWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Ref GitHubSecret
      Filters:
        -
          JsonPath: "$.ref"
          MatchEquals: refs/heads/{Branch}
      TargetPipeline: !Ref Pipeline
      TargetAction: Main
      Name: MainWebhook
      TargetPipelineVersion: !GetAtt Pipeline.Version
      RegisterWithThirdParty: true

  WebWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Ref GitHubSecret
      Filters:
        -
          JsonPath: "$.ref"
          MatchEquals: refs/heads/{Branch}
      TargetPipeline: !Ref Pipeline
      TargetAction: Web
      Name: WebWebhook
      TargetPipelineVersion: !GetAtt Pipeline.Version
      RegisterWithThirdParty: true

  ServicesWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Ref GitHubSecret
      Filters:
        -
          JsonPath: "$.ref"
          MatchEquals: refs/heads/{Branch}
      TargetPipeline: !Ref Pipeline
      TargetAction: Services
      Name: ServicesWebhook
      TargetPipelineVersion: !GetAtt Pipeline.Version
      RegisterWithThirdParty: true

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Ref PipelineName
      RoleArn: !GetAtt PipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactBucket
        EncryptionKey:
          Id: !GetAtt pipelineKey.Arn
          Type: "KMS"
      Stages:
        - Name: Source
          Actions:
            - Name: Main
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: '1'
                Provider: GitHub
              OutputArtifacts:
              - Name: S-Main
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref GitHubInfraRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubToken
                PollForSourceChanges: false
              RunOrder: 1
            - Name: Web
              Namespace: WebSourceVariables
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: '1'
                Provider: GitHub
              OutputArtifacts:
              - Name: S-Web
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref GitHubContentRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubToken
                PollForSourceChanges: false
              RunOrder: 1
            - Name: Services
              Namespace: ServicesSourceVariables
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: '1'
                Provider: GitHub
              OutputArtifacts:
              - Name: S-Services
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref GitHubServicesRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubToken
                PollForSourceChanges: false
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Services-Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref ServicesBuildProject
              InputArtifacts:
                - Name: S-Services
              OutputArtifacts:
                - Name: B-Services
            - Name: Services-UnitTests
              ActionTypeId:
                Category: Test
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref ServicesUnitTestsProject
              InputArtifacts:
                - Name: S-Services
        - Name: Staging
          Actions:
            - Name: Deploy-Main
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: S-Main
              OutputArtifacts:
                - Name: D-Main-Staging
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !GetAtt [MainCFNRole, Arn]
                StackName: Web-Staging
                TemplatePath: !Sub "S-Main::${MainTemplatePath}"
                ParameterOverrides: '{ "Environment": "staging", "SSLCertificateIdParameterVersion": "1" }'
                OutputFileName: MainOutput.json
              RunOrder: 1
            - Name: Deploy-Services-Emails
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: S-Services
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !GetAtt [ServicesCFNRole, Arn]
                StackName: Email-Templates-Staging
                TemplatePath: S-Services::cloudformation/email-templates-master-stack.yaml
                ParameterOverrides: '{ "Environment": "staging" }'
              RunOrder: 1
            - Name: Deploy-Services-Lists
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              InputArtifacts:
                - Name: B-Services
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !GetAtt ServicesCFNRole.Arn
                StackName: Service-Lists-Staging
                TemplatePath: B-Services::lists-packaged.yaml
                Capabilities: CAPABILITY_AUTO_EXPAND,CAPABILITY_NAMED_IAM
                ParameterOverrides: '{ "Environment": "staging" }'
              RunOrder: 1
            - Name: Deploy-Services-NotFound
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              InputArtifacts:
                - Name: B-Services
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !GetAtt ServicesCFNRole.Arn
                StackName: Service-NotFound-Staging
                TemplatePath: B-Services::notfound-packaged.yaml
                Capabilities: CAPABILITY_AUTO_EXPAND,CAPABILITY_NAMED_IAM
                ParameterOverrides: '{ "Environment": "staging" }'
              RunOrder: 1
            - Name: Deploy-Services-Products
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              InputArtifacts:
                - Name: B-Services
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !GetAtt ServicesCFNRole.Arn
                StackName: Service-Products-Staging
                TemplatePath: B-Services::products-packaged.yaml
                Capabilities: CAPABILITY_AUTO_EXPAND,CAPABILITY_NAMED_IAM
                ParameterOverrides: '{ "Environment": "staging" }'
              RunOrder: 1
            - Name: Deploy-Services-Contact
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              InputArtifacts:
                - Name: B-Services
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !GetAtt ServicesCFNRole.Arn
                StackName: Service-Contact-Staging
                TemplatePath: B-Services::contact-packaged.yaml
                Capabilities: CAPABILITY_AUTO_EXPAND,CAPABILITY_NAMED_IAM
                ParameterOverrides: '{ "Environment": "staging" }'
              RunOrder: 1
            - Name: Services-Integration-Tests
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              InputArtifacts:
                - Name: S-Services
              Configuration:
                ProjectName: !Ref ServicesIntegrationTestsProject
                EnvironmentVariables: '[{"name":"ENVIRONMENT_ID","value":"/Postman/Environment/Staging","type":"PARAMETER_STORE"}]'
              RunOrder: 2
            - Name: Deploy-Web
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              InputArtifacts:
                - Name: S-Web
              OutputArtifacts:
                - Name: D-Web-Staging
              Configuration:
                ProjectName: !Ref DeployWebContentProject
                EnvironmentVariables: !Sub |
                  [
                    {"name": "Commit_ID", "value": "#{WebSourceVariables.CommitId}", "type": "PLAINTEXT"},
                    {"name":"ENVIRONMENT","value":"staging","type":"PLAINTEXT"},
                    {"name":"WEB_BUCKET","value":"staging.${WebBucketName}","type":"PLAINTEXT"},
                    {"name":"PIPELINE","value":"main","type":"PLAINTEXT"},
                    {"name":"BUILD_CROSS_ACCOUNT_ROLE","value":"","type":"PLAINTEXT"},
                    {"name":"ACCOUNT_ID","value":"{{resolve:ssm:/accounts/staging:1}}","type":"PLAINTEXT"}
                  ]
              RunOrder: 3
            - Name: End-To-End-Tests
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              InputArtifacts:
                - Name: S-Web
              Configuration:
                ProjectName: !Ref E2ETestsProject
                BatchEnabled: true
                EnvironmentVariables: '[
                  {"name":"ENVIRONMENT","value":"staging","type":"PLAINTEXT"},
                  {"name":"CONFIG","value":"cypress.staging.json","type":"PLAINTEXT"},
                  {"name":"COMMIT_ID","value":"#{WebSourceVariables.CommitId}","type":"PLAINTEXT"},
                  {"name":"COMMIT_MSG","value":"#{WebSourceVariables.CommitMessage}","type":"PLAINTEXT"},
                  {"name":"COMMIT_URL","value":"#{WebSourceVariables.CommitUrl}","type":"PLAINTEXT"},
                  {"name":"TEST_TAG","value":"smoke","type":"PLAINTEXT"},
                  {"name":"BUILD_CROSS_ACCOUNT_ROLE","value":"","type":"PLAINTEXT"},
                  {"name":"ACCOUNT_ID","value":"{{resolve:ssm:/accounts/staging:1}}","type":"PLAINTEXT"}
                ]'
              RunOrder: 4
        - Name: Production
          Actions:
            - Name: CS-Main
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: S-Main
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !Sub "arn:aws:iam::{{resolve:ssm:/accounts/prod:1}}:role/${PipelineCrossAccountCFRoleName}"
                StackName: Web-Prod
                ChangeSetName: Web-Prod-ChangeSet
                TemplatePath: !Sub "S-Main::${MainTemplatePath}"
                ParameterOverrides: '{ "Environment": "prod", "SSLCertificateIdParameterVersion": "1" }'
              RoleArn: !Sub "arn:aws:iam::{{resolve:ssm:/accounts/prod:1}}:role/${PipelineCrossAccountRoleName}"
              RunOrder: 1
            - Name: CS-Services-Emails
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: S-Services
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !Sub "arn:aws:iam::{{resolve:ssm:/accounts/prod:1}}:role/${PipelineCrossAccountCFRoleName}"
                StackName: Email-Templates-Prod
                ChangeSetName: Email-Prod-ChangeSet
                TemplatePath: S-Services::cloudformation/email-templates-master-stack.yaml
                ParameterOverrides: '{ "Environment": "prod" }'
              RoleArn: !Sub "arn:aws:iam::{{resolve:ssm:/accounts/prod:1}}:role/${PipelineCrossAccountRoleName}"
              RunOrder: 1
            - Name: CS-Services-Lists
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: B-Services
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !Sub "arn:aws:iam::{{resolve:ssm:/accounts/prod:1}}:role/${PipelineCrossAccountCFRoleName}"
                StackName: Service-Lists-Prod
                ChangeSetName: Service-Lists-Prod-ChangeSet
                TemplatePath: B-Services::lists-packaged.yaml
                ParameterOverrides: |
                  {
                    "Environment": "prod",
                    "PushKpis": "true",
                    "KpiUrl": "/KPI/Lists/prod"
                  }
                Capabilities: CAPABILITY_AUTO_EXPAND,CAPABILITY_NAMED_IAM
              RoleArn: !Sub "arn:aws:iam::{{resolve:ssm:/accounts/prod:1}}:role/${PipelineCrossAccountRoleName}"
              RunOrder: 1
            - Name: CS-Services-NotFound
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: B-Services
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !Sub "arn:aws:iam::{{resolve:ssm:/accounts/prod:1}}:role/${PipelineCrossAccountCFRoleName}"
                StackName: Service-NotFound-Prod
                ChangeSetName: Service-NotFound-Prod-ChangeSet
                TemplatePath: B-Services::notfound-packaged.yaml
                ParameterOverrides: '{ "Environment": "prod" }'
                Capabilities: CAPABILITY_AUTO_EXPAND,CAPABILITY_NAMED_IAM
              RoleArn: !Sub "arn:aws:iam::{{resolve:ssm:/accounts/prod:1}}:role/${PipelineCrossAccountRoleName}"
              RunOrder: 1
            - Name: CS-Services-Products
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: B-Services
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !Sub "arn:aws:iam::{{resolve:ssm:/accounts/prod:1}}:role/${PipelineCrossAccountCFRoleName}"
                StackName: Service-Products-Prod
                ChangeSetName: Service-Products-Prod-ChangeSet
                TemplatePath: B-Services::products-packaged.yaml
                ParameterOverrides: '{ "Environment": "prod" }'
                Capabilities: CAPABILITY_AUTO_EXPAND,CAPABILITY_NAMED_IAM
              RoleArn: !Sub "arn:aws:iam::{{resolve:ssm:/accounts/prod:1}}:role/${PipelineCrossAccountRoleName}"
              RunOrder: 1
            - Name: CS-Services-Contact
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: B-Services
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !Sub "arn:aws:iam::{{resolve:ssm:/accounts/prod:1}}:role/${PipelineCrossAccountCFRoleName}"
                StackName: Service-Contact-Prod
                ChangeSetName: Service-Contact-Prod-ChangeSet
                TemplatePath: B-Services::contact-packaged.yaml
                ParameterOverrides: '{ "Environment": "prod" }'
                Capabilities: CAPABILITY_AUTO_EXPAND,CAPABILITY_NAMED_IAM
              RoleArn: !Sub "arn:aws:iam::{{resolve:ssm:/accounts/prod:1}}:role/${PipelineCrossAccountRoleName}"
              RunOrder: 1
            - Name: Approve-Deploy
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: '1'
              RunOrder: 2
            - Name: Deploy-Main
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              OutputArtifacts:
                - Name: D-Main-Prod
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: Web-Prod-ChangeSet
                RoleArn: !Sub "arn:aws:iam::{{resolve:ssm:/accounts/prod:1}}:role/${PipelineCrossAccountCFRoleName}"
                StackName: Web-Prod
                OutputFileName: MainOutput.json
              RoleArn: !Sub "arn:aws:iam::{{resolve:ssm:/accounts/prod:1}}:role/${PipelineCrossAccountRoleName}"
              RunOrder: 3
            - Name: Deploy-Services-Emails
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: Email-Prod-ChangeSet
                RoleArn: !Sub "arn:aws:iam::{{resolve:ssm:/accounts/prod:1}}:role/${PipelineCrossAccountCFRoleName}"
                StackName: Email-Templates-Prod
              RoleArn: !Sub "arn:aws:iam::{{resolve:ssm:/accounts/prod:1}}:role/${PipelineCrossAccountRoleName}"
              RunOrder: 3
            - Name: Deploy-Services-Lists
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: Service-Lists-Prod-ChangeSet
                RoleArn: !Sub "arn:aws:iam::{{resolve:ssm:/accounts/prod:1}}:role/${PipelineCrossAccountCFRoleName}"
                StackName: Service-Lists-Prod
                Capabilities: CAPABILITY_AUTO_EXPAND,CAPABILITY_NAMED_IAM
              RoleArn: !Sub "arn:aws:iam::{{resolve:ssm:/accounts/prod:1}}:role/${PipelineCrossAccountRoleName}"
              RunOrder: 3
            - Name: Deploy-Services-NotFound
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: Service-NotFound-Prod-ChangeSet
                RoleArn: !Sub "arn:aws:iam::{{resolve:ssm:/accounts/prod:1}}:role/${PipelineCrossAccountCFRoleName}"
                StackName: Service-NotFound-Prod
                Capabilities: CAPABILITY_AUTO_EXPAND,CAPABILITY_NAMED_IAM
              RoleArn: !Sub "arn:aws:iam::{{resolve:ssm:/accounts/prod:1}}:role/${PipelineCrossAccountRoleName}"
              RunOrder: 3
            - Name: Deploy-Services-Products
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: Service-Products-Prod-ChangeSet
                RoleArn: !Sub "arn:aws:iam::{{resolve:ssm:/accounts/prod:1}}:role/${PipelineCrossAccountCFRoleName}"
                StackName: Service-Products-Prod
                Capabilities: CAPABILITY_AUTO_EXPAND,CAPABILITY_NAMED_IAM
              RoleArn: !Sub "arn:aws:iam::{{resolve:ssm:/accounts/prod:1}}:role/${PipelineCrossAccountRoleName}"
              RunOrder: 3
            - Name: Deploy-Services-Contact
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: Service-Contact-Prod-ChangeSet
                RoleArn: !Sub "arn:aws:iam::{{resolve:ssm:/accounts/prod:1}}:role/${PipelineCrossAccountCFRoleName}"
                StackName: Service-Contact-Prod
                Capabilities: CAPABILITY_AUTO_EXPAND,CAPABILITY_NAMED_IAM
              RoleArn: !Sub "arn:aws:iam::{{resolve:ssm:/accounts/prod:1}}:role/${PipelineCrossAccountRoleName}"
              RunOrder: 3
            - Name: Services-Integration-Tests
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              InputArtifacts:
                - Name: S-Services
              Configuration:
                ProjectName: !Ref ServicesIntegrationTestsProject
                EnvironmentVariables: '[{"name":"ENVIRONMENT_ID","value":"/Postman/Environment/Prod","type":"PARAMETER_STORE"}]'
              RunOrder: 4
            - Name: Deploy-Web
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              InputArtifacts:
                - Name: S-Web
              OutputArtifacts:
                - Name: D-Web-Prod
              Configuration:
                ProjectName: !Ref DeployWebContentProject
                EnvironmentVariables: !Sub |
                  [
                    {"name": "Commit_ID", "value": "#{WebSourceVariables.CommitId}", "type": "PLAINTEXT"},
                    {"name":"ENVIRONMENT","value":"prod","type":"PLAINTEXT"},
                    {"name":"WEB_BUCKET","value":"${WebBucketName}","type":"PLAINTEXT"},
                    {"name":"BUILD_CROSS_ACCOUNT_ROLE","value":"${PipelineCrossAccountDeployWebContentRoleName}","type":"PLAINTEXT"},
                    {"name":"ACCOUNT_ID","value":"{{resolve:ssm:/accounts/prod:1}}","type":"PLAINTEXT"},
                    {"name":"PIPELINE","value":"main","type":"PLAINTEXT"}
                  ]
              RunOrder: 5
            - Name: End-To-End-Tests
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              InputArtifacts:
                - Name: S-Web
              Configuration:
                ProjectName: !Ref E2ETestsProject
                BatchEnabled: true
                EnvironmentVariables: !Sub |
                  [
                    {"name":"ENVIRONMENT","value":"prod","type":"PLAINTEXT"},
                    {"name":"CONFIG","value":"cypress.prod.json","type":"PLAINTEXT"},
                    {"name":"COMMIT_ID","value":"#{WebSourceVariables.CommitId}","type":"PLAINTEXT"},
                    {"name":"COMMIT_MSG","value":"#{WebSourceVariables.CommitMessage}","type":"PLAINTEXT"},
                    {"name":"COMMIT_URL","value":"#{WebSourceVariables.CommitUrl}","type":"PLAINTEXT"},
                    {"name":"TEST_TAG","value":"smoke","type":"PLAINTEXT"},
                    {"name":"BUILD_CROSS_ACCOUNT_ROLE","value":"${PipelineCrossAccountE2ERoleName}","type":"PLAINTEXT"},
                    {"name":"ACCOUNT_ID","value":"{{resolve:ssm:/accounts/prod:1}}","type":"PLAINTEXT"}
                  ]
              RunOrder: 6

  ServicesBuildProject:
    Type: AWS::CodeBuild::Project
    DependsOn: ServicesLogGroup
    Properties:
      Name: Services-API-Builds
      Description: Builds Services repo APIs
      ServiceRole: !GetAtt ServicesBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Cache:
        Type: LOCAL
        Modes:
        - LOCAL_DOCKER_LAYER_CACHE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        EnvironmentVariables:
          - Name: LISTS_BUILD_OUTPUT_BUCKET
            Value: !Ref ListsBuildsBucket
          - Name: NOTFOUND_BUILD_OUTPUT_BUCKET
            Value: !Ref NotFoundBuildsBucket
          - Name: PRODUCTS_BUILD_OUTPUT_BUCKET
            Value: !Ref ProductsBuildsBucket
          - Name: CONTACT_BUILD_OUTPUT_BUCKET
            Value: !Ref ContactBuildsBucket
          - Name: EMAIL_TEMPLATES_BUCKET
            Value: !Ref EmailTemplatesBucket
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.yaml
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
          GroupName: services-logs
          StreamName: Builds
      TimeoutInMinutes: 10

  ServicesUnitTestsProject:
    Type: AWS::CodeBuild::Project
    DependsOn: ServicesLogGroup
    Properties:
      Name: Services-UnitTests
      Description: Performs the unit testing of the lambda functions.
      ServiceRole: !GetAtt ServicesBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Cache:
        Type: LOCAL
        Modes:
        - LOCAL_DOCKER_LAYER_CACHE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec-unittests.yaml
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
          GroupName: services-logs
          StreamName: UnitTests
      TimeoutInMinutes: 10

  ServicesIntegrationTestsProject:
    DependsOn: ServicesLogGroup
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: Services-Integration-Tests
      Description: Performs integration testing via Postman API.
      Artifacts:
        Type: CODEPIPELINE
      Cache:
        Type: LOCAL
        Modes:
        - LOCAL_DOCKER_LAYER_CACHE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: 'aws/codebuild/standard:4.0'
      ServiceRole: !GetAtt ServicesBuildRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec-postman.yaml
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
          GroupName: services-logs
          StreamName: Integration-Tests

  E2ETestsProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: Web-E2E-Tests
      Description: Performs end-to-end tests with cypress.
      Artifacts:
        Type: CODEPIPELINE
      Cache:
        Type: LOCAL
        Modes:
        - LOCAL_DOCKER_LAYER_CACHE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: 'aws/codebuild/standard:4.0'
      ServiceRole: !GetAtt E2EBuildProjectRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec-cypress.yaml
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
          GroupName: !Ref ServicesLogGroup
          StreamName: E2E-Tests
      BuildBatchConfig:
        ServiceRole: !Ref E2EBatchServiceRole
        TimeoutInMins: 15
        Restrictions:
          MaximumBuildsAllowed: 10

  DeployWebContentProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: Web-Deploy-Content
      Description: Deploys react web application
      Artifacts:
        Type: CODEPIPELINE
      Cache:
        Type: LOCAL
        Modes:
        - LOCAL_DOCKER_LAYER_CACHE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
      ServiceRole: !GetAtt WebDeployContentRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec-react.yaml
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
          GroupName: web
          StreamName: DeployContent

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'pipeline-${PipelineName}-ServiceRole'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: PipelineServiceRolePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - cloudformation:CreateStack
                  - cloudformation:DescribeStacks
                  - cloudformation:DeleteStack
                  - cloudformation:UpdateStack
                  - cloudformation:CreateChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DescribeChangeSet
                  - cloudformation:SetStackPolicy
                  - iam:PassRole
                  - sns:Publish
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuildBatches
                  - codebuild:StartBuildBatch
                Resource: "*"
        - PolicyName: PipelineCrossAccountPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource:
                  - "arn:aws:iam::{{resolve:ssm:/accounts/prod:1}}:role/*"

  MainCFNRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'pipeline-${PipelineName}-MainCFN-Role'
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [cloudformation.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: ManageCloudFormation
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - cloudformation:CreateStack
                  - cloudformation:DescribeStacks
                  - cloudformation:DeleteStack
                  - cloudformation:UpdateStack
                  - cloudformation:CreateChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DescribeChangeSet
                Effect: Allow
                Resource: '*'
        - PolicyName: SSLCertificateIdParameterStore
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - ssm:GetParameters
                Effect: Allow
                Resource:
                  - !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/ewelists.com/staging/SSLCertificateId'
        - PolicyName: ManageStagingS3
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - s3:GetObject
                  - s3:CreateBucket
                  - s3:DeleteBucket
                  - s3:PutBucketPublicAccessBlock
                  - s3:PutLifecycleConfiguration
                  - s3:PutBucketAcl
                  - s3:GetBucketAcl
                  - s3:PutBucketLogging
                  - s3:PutMetricsConfiguration
                  - s3:PutBucketWebsite
                  - s3:PutBucketPolicy
                  - s3:GetBucketPolicy
                Effect: Allow
                Resource:
                  - "arn:aws:s3:::staging.ewelists.com"
                  - "arn:aws:s3:::staging.ewelists.com/*"
                  - "arn:aws:s3:::staging.ewelists.co.uk"
                  - "arn:aws:s3:::staging.ewelists.co.uk/*"
                  - "arn:aws:s3:::www.staging.ewelists.com"
                  - "arn:aws:s3:::www.staging.ewelists.com/*"
                  - "arn:aws:s3:::www.staging.ewelists.co.uk"
                  - "arn:aws:s3:::www.staging.ewelists.co.uk/*"
                  - "arn:aws:s3:::staging.ewelists.com-logging"
                  - "arn:aws:s3:::staging.ewelists.com-logging/*"
                  - "arn:aws:s3:::staging.ewelists.com-images"
                  - "arn:aws:s3:::staging.ewelists.com-redirects"
                  - "arn:aws:s3:::cognito-ewelists-backups-staging"
        - PolicyName: ManageRoute53
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - route53:*
                Effect: Allow
                Resource:
                  - "*"
        - PolicyName: ManageCloudFront
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - cloudfront:CreateCloudFrontOriginAccessIdentity
                  - cloudfront:CreateDistribution
                  - cloudfront:DeleteDistribution
                  - cloudfront:GetCloudFrontOriginAccessIdentity
                  - cloudfront:GetCloudFrontOriginAccessIdentityConfig
                  - cloudfront:DeleteCloudFrontOriginAccessIdentity
                  - cloudfront:TagResource
                  - cloudfront:GetDistribution
                  - cloudfront:UpdateDistribution
                  - cloudfront:UpdateCloudFrontOriginAccessIdentity
                Effect: Allow
                Resource:
                  - "*"

  ServicesCFNRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'pipeline-${PipelineName}-ServicesCFN-Role'
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [cloudformation.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: ManageCloudFormation
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - cloudformation:CreateStack
                  - cloudformation:DescribeStacks
                  - cloudformation:DeleteStack
                  - cloudformation:UpdateStack
                  - cloudformation:CreateChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DescribeChangeSet
                Effect: Allow
                Resource: '*'
        - PolicyName: ManagePiplineAndBuildArtifactBuckets
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - s3:GetObject
                  - s3:CreateBucket
                  - s3:DeleteBucket
                  - s3:PutBucketPublicAccessBlock
                Effect: Allow
                Resource:
                  - "arn:aws:s3:::pipeline-services-builds-lists/*"
                  - "arn:aws:s3:::pipeline-services-builds-notfound/*"
                  - "arn:aws:s3:::pipeline-services-builds-products/*"
                  - "arn:aws:s3:::pipeline-services-builds-contact/*"
                  - "arn:aws:s3:::pipeline-services-email-templates/*"
        - PolicyName: ManageIam
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - iam:ListRoles
                  - iam:ListPolicies
                  - iam:GetRole
                  - iam:GetPolicy
                  - iam:CreateRole
                  - iam:CreatePolicy
                  - iam:DeleteRole
                  - iam:DeletePolicy
                  - iam:UpdateRole
                  - iam:AttachRolePolicy
                  - iam:DetachRolePolicy
                  - iam:PassRole
                  - iam:PutRolePolicy
                  - iam:DeleteRolePolicy
                  - iam:getRolePolicy
                Effect: Allow
                Resource: '*'
        - PolicyName: ManageServerless
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - lambda:*
                  - apigateway:*
                Effect: Allow
                Resource: '*'
        - PolicyName: ParameterStore
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - ssm:GetParameters
                Effect: Allow
                Resource:
                  - !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/KPI*'
        - PolicyName: ManageSES
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - ses:*
                Effect: Allow
                Resource:
                  - "*"

  E2EBuildProjectRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: WebE2ETestsBuildProjectRole
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - codebuild.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: ArtifactsAndLogsPolicy
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource:
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${ServicesLogGroup}"
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${ServicesLogGroup}:*"
          - Effect: Allow
            Action:
              - s3:PutObject
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:GetBucketAcl
              - s3:GetBucketLocation
            Resource:
              - !Sub "arn:aws:s3:::${PipelineArtifactBucket}/*"
          Version: '2012-10-17'
      - PolicyName: CypressScriptsPolicy
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
              - cognito-idp:AdminCreateUser
              - cognito-idp:AdminSetUserPassword
              - cognito-idp:AdminUpdateUserAttributes
              - cognito-idp:AdminDeleteUser
            Resource:
              - Fn::ImportValue: Auth-staging-UserPoolArn
          - Effect: Allow
            Action:
              - 'dynamodb:PutItem'
              - 'dynamodb:Query'
              - 'dynamodb:UpdateItem'
              - 'dynamodb:GetItem'
              - 'dynamodb:Scan'
              - 'dynamodb:DeleteItem'
            Resource:
              - !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/lists-staging"
              - !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/lists-staging/*"
              - !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/notfound-staging"
              - !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/products-staging"
          - Effect: Allow
            Action:
              - ssm:GetParameters
            Resource:
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/Cypress/Web/Key"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/Cypress/GT/*"
          Version: '2012-10-17'
      - PolicyName: BucketEncryptionPolicy
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
              - kms:DescribeKey
              - kms:GenerateDataKey*
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:Decrypt
            Resource: !GetAtt pipelineKey.Arn
          Version: '2012-10-17'
      - PolicyName: AssumeProdRolePolicy
        PolicyDocument:
          Statement:
            - Effect: Allow
              Action:
                - sts:AssumeRole
              Resource:
                - !Sub "arn:aws:iam::{{resolve:ssm:/accounts/prod:1}}:role/${PipelineCrossAccountE2ERoleName}"

  E2EBatchServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: WebE2ETestsBatchServiceRole
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - codebuild.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: BatchBuildsPolicy
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
              - codebuild:StartBuild
              - codebuild:StopBuild
              - codebuild:RetryBuild
            Resource:
              - !Sub 'arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/Web-E2E-Tests'
          Version: '2012-10-17'
      - PolicyName: BucketEncryptionPolicy
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
              - kms:DescribeKey
              - kms:GenerateDataKey*
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:Decrypt
            Resource: !GetAtt pipelineKey.Arn
          Version: '2012-10-17'

  ServicesBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ServicesBuildAndTestRole
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - codebuild.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: ServicesRolePolicy
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource:
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:services-logs"
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:services-logs:*"
          - Effect: Allow
            Action:
              - s3:PutObject
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:GetBucketAcl
              - s3:GetBucketLocation
            Resource:
              - !Sub "arn:aws:s3:::${PipelineArtifactBucket}/*"
              - "arn:aws:s3:::pipeline-services-builds-lists/*"
              - "arn:aws:s3:::pipeline-services-builds-notfound/*"
              - "arn:aws:s3:::pipeline-services-builds-products/*"
              - "arn:aws:s3:::pipeline-services-builds-contact/*"
              - "arn:aws:s3:::pipeline-services-email-templates/*"
          - Effect: Allow
            Action:
              - ssm:GetParameters
            Resource:
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/Postman/*"
          Version: '2012-10-17'
      - PolicyName: BucketEncryptionPolicy
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
              - kms:DescribeKey
              - kms:GenerateDataKey*
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:Decrypt
            Resource: !GetAtt pipelineKey.Arn
          Version: '2012-10-17'

  WebDeployContentRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: WebDeployContentRole
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - codebuild.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: WebDeployContentRolePolicy
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource:
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:web"
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:web:*"
          - Effect: Allow
            Action:
              - s3:DeleteObject
              - s3:PutObject
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:GetBucketVersioning
              - s3:ListBucket
            Resource:
              - !Sub "arn:aws:s3:::${PipelineArtifactBucket}/*"
              - !Sub "arn:aws:s3:::staging.${WebBucketName}/*"
              - !Sub "arn:aws:s3:::staging.${WebBucketName}"
          - Effect: Allow
            Action:
              - cloudfront:GetInvalidation
              - cloudfront:CreateInvalidation
              - cloudfront:ListDistributions
            Resource: '*'
          - Effect: Allow
            Action:
              - codepipeline:ListPipelineExecutions
            Resource: '*'
          Version: '2012-10-17'
      - PolicyName: AssumeProdRolePolicy
        PolicyDocument:
          Statement:
            - Effect: Allow
              Action:
                - sts:AssumeRole
              Resource:
                - !Sub "arn:aws:iam::{{resolve:ssm:/accounts/prod:1}}:role/${PipelineCrossAccountDeployWebContentRoleName}"
      - PolicyName: BucketEncryptionPolicy
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
              - kms:DescribeKey
              - kms:GenerateDataKey*
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:Decrypt
            Resource: !GetAtt pipelineKey.Arn
          Version: '2012-10-17'

  WebDeployContentLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: web
      RetentionInDays: 30

  ServicesLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: services-logs
      RetentionInDays: 30

  pipelineKey:
    Type: AWS::KMS::Key
    Properties:
      Description: Symmetric CMK for Main pipeline to have cross-account permissions
      KeyPolicy:
        Version: '2012-10-17'
        Id: key-default-1
        Statement:
        - Sid: Enable IAM User Permissions
          Effect: Allow
          Principal:
            AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
          Action: kms:*
          Resource: '*'
        - Sid: Allow administration of the key
          Effect: Allow
          Principal:
            AWS: !Sub "arn:aws:iam::${AWS::AccountId}:role/AdminAccessRole"
          Action:
          - kms:Create*
          - kms:Describe*
          - kms:Enable*
          - kms:List*
          - kms:Put*
          - kms:Update*
          - kms:Revoke*
          - kms:Disable*
          - kms:Get*
          - kms:Delete*
          - kms:ScheduleKeyDeletion
          - kms:CancelKeyDeletion
          Resource: '*'
        - Sid: Allow use of the key
          Effect: Allow
          Principal:
            AWS:
              - !GetAtt PipelineRole.Arn
              - !Sub "arn:aws:iam::{{resolve:ssm:/accounts/prod:1}}:role/${PipelineCrossAccountRoleName}"
          Action:
          - kms:DescribeKey
          - kms:Encrypt
          - kms:Decrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey
          - kms:GenerateDataKeyWithoutPlaintext
          Resource: '*'
